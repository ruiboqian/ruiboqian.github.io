<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ruibo Qian&#39;s Notes</title>
  
  
  <link href="http://yoursite.com/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-08-23T14:46:18.935Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Ruibo Qian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo Next 阅读全文被定位至more标签的问题</title>
    <link href="http://yoursite.com/2020/07/12/theme-next-more/"/>
    <id>http://yoursite.com/2020/07/12/theme-next-more/</id>
    <published>2020-07-12T14:08:03.000Z</published>
    <updated>2020-08-23T14:46:18.935Z</updated>
    
    <content type="html"><![CDATA[<p>因为在博客主页会有多篇文章，如果你想让你的文章只显示一部分，多余的可以点击“阅读全文”来查看，那么你需要在你的文章中添加<code>more</code>标签：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>但是在点击“阅读全文”按钮跳转后，会自动定位到<code>more</code>标签的位置，要取消定位方法如下：</p><a id="more"></a><ul><li><p>老版本：修改主题文件的设置<code>scroll_to_more</code>为<code>false</code>即可</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scroll_to_more: false</span><br></pre></td></tr></table></figure></li><li><p>新版本：在<code>themes/next/layout/_macro/post.swig</code>中去除<code>#more</code>即可</p><p>  修改前：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a class&#x3D;&quot;btn&quot; href&#x3D;&quot;&#123;&#123; url_for(post.path) &#125;&#125;#more&quot; rel&#x3D;&quot;contents&quot;&gt;</span><br></pre></td></tr></table></figure><p>  修改后：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a class&#x3D;&quot;btn&quot; href&#x3D;&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; rel&#x3D;&quot;contents&quot;&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;因为在博客主页会有多篇文章，如果你想让你的文章只显示一部分，多余的可以点击“阅读全文”来查看，那么你需要在你的文章中添加&lt;code&gt;more&lt;/code&gt;标签：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是在点击“阅读全文”按钮跳转后，会自动定位到&lt;code&gt;more&lt;/code&gt;标签的位置，要取消定位方法如下：&lt;/p&gt;</summary>
    
    
    
    <category term="Tool" scheme="http://yoursite.com/categories/Tool/"/>
    
    
    <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
    <category term="more" scheme="http://yoursite.com/tags/more/"/>
    
  </entry>
  
  <entry>
    <title>Mac上搭建基于GitHub的Hexo博客</title>
    <link href="http://yoursite.com/2020/07/10/hexo-blog/"/>
    <id>http://yoursite.com/2020/07/10/hexo-blog/</id>
    <published>2020-07-10T14:55:29.000Z</published>
    <updated>2021-03-31T07:15:37.688Z</updated>
    
    <content type="html"><![CDATA[<p>先前书写CSDN、简书等平台，到后来购买云虚拟主机、ECS、也都尝试搭建自己的一套Blog系统，Wordpress、自己打包上传build包等形式都已尝试过。越往后越觉得累，也觉得没有这个必要了。主要原因还是自己的服务器需要各种安全防御，否则各种病毒和蛀虫就开始肆虐了，有段时间因为工作忙，等准备写文章的时候发现，服务器已经宕机了。更有意思的是，有一次因为自己忘记续费，也没有快照，然后……你懂得……，所以后来就想着用Github托管可能会好一点。</p><a id="more"></a><h2 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1. 环境配置"></a>1. 环境配置</h2><p><a href="https://hexo.io/zh-cn/docs/index.html">Hexo官网</a>对环境配置已经描述的很清楚了，我就不搬砖了</p><h2 id="2-初见Hexo"><a href="#2-初见Hexo" class="headerlink" title="2. 初见Hexo"></a>2. 初见Hexo</h2><h3 id="2-1-全局安装hexo"><a href="#2-1-全局安装hexo" class="headerlink" title="2.1 全局安装hexo"></a>2.1 全局安装hexo</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>如果出现权限不足的报错提示，使用<code>$ sudo npm install -g hexo</code>命令进行安装，没有影响。</p><h3 id="2-2-初始化"><a href="#2-2-初始化" class="headerlink" title="2.2 初始化"></a>2.2 初始化</h3><p>终端cd到一个你选定的目录，执行初始化命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init blog</span><br></pre></td></tr></table></figure><p><code>blog</code>是最终建立的文件夹名称。<code>cd</code>到<code>blog</code>文件夹下，安装对应的<code>node</code>包：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p>开启<code>hexo</code>服务器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server或者：hexo s</span><br></pre></td></tr></table></figure><p><img src="http://blog.idbeny.com/assets/ifmjk.png@normal"></p><p>补充：<code>hexo s</code>是<code>hexo server</code>的一种简写</p><p>打开 <a href="http://localhost:4000/">http://localhost:4000</a> 在本地预览界面<br><img src="http://blog.idbeny.com/assets/57fka.png@normal"></p><h2 id="3-关联GitHub"><a href="#3-关联GitHub" class="headerlink" title="3. 关联GitHub"></a>3. 关联GitHub</h2><ol><li><p>使用<code>vim</code>或者直接用编辑器打开blog根目录下的<code>_config.yml</code>文件，修改如下配置（在文件最下方）</p><p> <img src="http://blog.idbeny.com/assets/qg97x.png@normal"></p><p> 注意：<code>repository</code>是在github上已经初始化的项目地址</p></li><li><p>在blog文件夹下生成静态页面</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate或者：hexo g</span><br></pre></td></tr></table></figure><p> 补充：<code>hexo g</code>是<code>hexo generate</code>的一种简写</p></li><li><p>配置/部署</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy或者：hexo d</span><br></pre></td></tr></table></figure><p> 补充：<code>hexo d</code>是<code>hexo deploy</code>的一种简写</p><blockquote><p>注意：若执行命令报错：无法连接git或找不到git，则执行如下命令来安装<code>hexo-deployer-git</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>再次执行<code>hexo d</code>即可</p></blockquote></li><li><p>鉴权github</p><p> <img src="http://blog.idbeny.com/assets/f0m3c.png@normal"></p></li></ol><h2 id="4-生产"><a href="#4-生产" class="headerlink" title="4. 生产"></a>4. 生产</h2><ol><li><p>在blog文件夹下，执行新建文章命令</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &quot;helloworld&quot;</span><br></pre></td></tr></table></figure><p> 文件类型是<code>markdown</code>，文件地址在<code>/blog/source/_posts</code>目录下</p></li><li><p>发布文章</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure></li><li><p>部署</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p> 以上基本上就完成了博客的搭建和生产内容的基本设施。</p></li></ol><p><strong>总结</strong>：新建-部署文章三步走</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean&#x2F;&#x2F;清除缓存文件 (db.json) 和已生成的静态文件 (public)</span><br><span class="line">$ hexo g&#x2F;&#x2F;生成缓存和静态文件</span><br><span class="line">$ hexo d&#x2F;&#x2F;重新部署到服务器</span><br></pre></td></tr></table></figure><h2 id="5-主题"><a href="#5-主题" class="headerlink" title="5. 主题"></a>5. 主题</h2><p>要想页面漂亮并规范一点，可以配置个主题。我们一般在Hexo官网中搜索喜欢的主题，我们以NexT主题为例。</p><p><img src="http://blog.idbeny.com/assets/mxyfe.png@normal"></p><p>把主题下载到<code>blog/themes/next</code>目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next</span><br></pre></td></tr></table></figure><p>修改<code>_config.yml</code>里的<code>theme</code>为<code>next</code></p><p><img src="http://blog.idbeny.com/assets/si4gm.png@normal"></p><p>主题的名称、描述等属性修改在<code>blog/themes/next/_config.yml</code>文件中，具体可参考<a href="http://theme-next.iissnan.com/">文档</a>。</p><h2 id="6-绑定域名"><a href="#6-绑定域名" class="headerlink" title="6. 绑定域名"></a>6. 绑定域名</h2><p>如果觉得github的二级域名使用不方便，我们可以通过绑定自己的一级域名来直接访问（实际上就是做了一次CDN跳转）</p><ul><li><p>在<code>/blog/themes/next/source</code>目录下新建文件名为<code>CNAME</code>的文件（注意没有后缀名），直接将自己的域名如：<code>idbeny.com</code>写入。</p></li><li><p>和发布文章一样，三步走即可（- clean - g - d）</p></li><li><p>添加解析</p><table><thead><tr><th align="center">记录类型</th><th align="center">主机记录</th><th align="center">解析线路</th><th align="center">记录值</th><th align="center">TTL</th></tr></thead><tbody><tr><td align="center">CNAME</td><td align="center">@</td><td align="center">默认</td><td align="center">idbeny.github.io.</td><td align="center">10分钟</td></tr></tbody></table></li></ul><p>注意：记录值<code>idbeny.github.io.</code>结尾有一个点<code>.</code></p><h2 id="7-快速访问"><a href="#7-快速访问" class="headerlink" title="7. 快速访问"></a>7. 快速访问</h2><p>Github`是国外网站，所以我们在天朝访问的时候总是有点慢，甚至有时候打不开，这时候我们就可以把文章同时部署到国内的托管平台（<a href="https://gitee.com/">码云</a> | <a href="https://coding.net/">Coding</a>等）。同时也能够保证突然某一天其中一个平台的大变动（当然，不管是哪一种，一定要在本地备份，一定要在本地备份，血的教训……）。</p><ol><li><p>首先到码云上注册并新建一个项目（步骤同<code>Github</code>），项目名称和用户个性后缀相同（方便二级域名访问博客），然后配置<code>Gitee Pages</code>服务</p><p> <img src="http://blog.idbeny.com/assets/jf23y.png@normal"></p></li><li><p>直接点击启动即可（需要绑定手机号，如果没有绑定，不能启动）</p><p> <img src="http://blog.idbeny.com/assets/b0yeu.png@normal"></p></li><li><p>启动完成后，会提示已开启服务</p><p> <img src="http://blog.idbeny.com/assets/fij4q.png@normal"></p></li><li><p>打开本地<code>blog</code>目录下的<code>_config.yml</code>文件，修改如下（之后的步骤和Github一致）：</p><p> <img src="http://blog.idbeny.com/assets/nydar.png@normal"></p></li><li><p>部署三步走（- clean - d - g）</p></li><li><p>域名解析</p><table><thead><tr><th align="center">记录类型</th><th align="center">主机记录</th><th align="center">解析线路</th><th align="center">记录值</th><th align="center">TTL</th></tr></thead><tbody><tr><td align="center">CNAME</td><td align="center">@</td><td align="center">海外</td><td align="center">idbeny.github.io.</td><td align="center">10分钟</td></tr><tr><td align="center">CNAME</td><td align="center">@</td><td align="center">默认</td><td align="center">idbeny.gitee.io.</td><td align="center">10分钟</td></tr></tbody></table></li></ol><p>如果是<code>Coding</code>平台，还需要到<code>blog/source</code>目录下新建<code>Staticfile</code>文件（名字必须是<code>Staticfile</code>），其他步骤都基本一致。</p><p>至此，<code>Blog</code>系统搭建完毕。</p><blockquote><p>本文作者： idbeny<br>本文链接： <a href="http://idbeny.com/2020/06/01/hexo-blog/">http://idbeny.com/2020/06/01/hexo-blog/</a><br>版权声明： 本博客所有文章除特别声明外，均采用 CC BY-NC-SA 3.0 许可协议。转载请注明出处！</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;先前书写CSDN、简书等平台，到后来购买云虚拟主机、ECS、也都尝试搭建自己的一套Blog系统，Wordpress、自己打包上传build包等形式都已尝试过。越往后越觉得累，也觉得没有这个必要了。主要原因还是自己的服务器需要各种安全防御，否则各种病毒和蛀虫就开始肆虐了，有段时间因为工作忙，等准备写文章的时候发现，服务器已经宕机了。更有意思的是，有一次因为自己忘记续费，也没有快照，然后……你懂得……，所以后来就想着用Github托管可能会好一点。&lt;/p&gt;</summary>
    
    
    
    <category term="Tool" scheme="http://yoursite.com/categories/Tool/"/>
    
    
    <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>在iOS项目中，如何完美的修改项目名称</title>
    <link href="http://yoursite.com/2017/02/08/project-rename/"/>
    <id>http://yoursite.com/2017/02/08/project-rename/</id>
    <published>2017-02-08T05:38:45.000Z</published>
    <updated>2020-08-25T12:30:53.523Z</updated>
    
    <content type="html"><![CDATA[<p>在iOS开发中，有时候想改一下项目的名字，这会遇到很多麻烦。</p><ul><li>直接改项目名的话，Xcode不会帮你改所有的名字</li><li>项目中的很多文件、文件夹或者是项目设置的项，都是不能随便改的，有时候改着改着，就会编译不了。</li></ul><p>所以各位重命名项目时，记得先备份好一份噢。本文我会介绍一种“完美”的修改方法。</p><a id="more"></a><p><strong>注意：重命名项目时，记得先备份好一份</strong><br><strong>注意：重命名项目时，记得先备份好一份</strong><br><strong>注意：重命名项目时，记得先备份好一份</strong></p><p><strong>重要的事情说三遍</strong></p><p>本文会把一个项目名叫 <code>OldDemo123</code> 改成 <code>NewDemo</code>。</p><h3 id="1-首先"><a href="#1-首先" class="headerlink" title="1. 首先"></a>1. 首先</h3><p>修改前的项目结构：</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-a6c5e150a4b8bbb3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改前的项目结构"></p><h3 id="2-打开项目，对项目名进行-Rename"><a href="#2-打开项目，对项目名进行-Rename" class="headerlink" title="2. 打开项目，对项目名进行 Rename"></a>2. 打开项目，对项目名进行 <code>Rename</code></h3><h4 id="2-1-选中项目名并按下回车，进入可编辑状态："><a href="#2-1-选中项目名并按下回车，进入可编辑状态：" class="headerlink" title="2.1 选中项目名并按下回车，进入可编辑状态："></a>2.1 选中项目名并按下回车，进入可编辑状态：</h4><p><img src="http://upload-images.jianshu.io/upload_images/329784-fa558ab1342570c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="选中项目名字，进行编辑"></p><h4 id="2-2-输入新的项目名字，然后按回车，弹出改名前和改名后的文件对名，这时点击-Rename："><a href="#2-2-输入新的项目名字，然后按回车，弹出改名前和改名后的文件对名，这时点击-Rename：" class="headerlink" title="2.2 输入新的项目名字，然后按回车，弹出改名前和改名后的文件对名，这时点击 Rename："></a>2.2 输入新的项目名字，然后按回车，弹出改名前和改名后的文件对名，这时点击 <code>Rename</code>：</h4><p><img src="http://upload-images.jianshu.io/upload_images/329784-8a1cf4874bf9ddd4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="点击 **Rename**"></p><h3 id="3-修改文件夹名字和显示包内容"><a href="#3-修改文件夹名字和显示包内容" class="headerlink" title="3. 修改文件夹名字和显示包内容"></a>3. 修改文件夹名字和显示包内容</h3><h4 id="3-1-打开应用所在文件夹，修改文件夹名字"><a href="#3-1-打开应用所在文件夹，修改文件夹名字" class="headerlink" title="3.1 打开应用所在文件夹，修改文件夹名字"></a>3.1 打开应用所在文件夹，修改文件夹名字</h4><p>注意：</p><ul><li>文件夹<code>NewDemoTests</code>和<code>NewDemoUITests</code>里面也要修改</li><li>这里的<code>NewDemoTests</code>，原先为<code>OldDemo123Tests</code>。<br>我们改名字时需要注意，只需要把旧名字（<code>OldDemo123</code>）替换成新名字（<code>NewDemo</code>）即可，不要把其它字符（<code>Tests</code>）删除！</li></ul><p><img src="http://upload-images.jianshu.io/upload_images/329784-15b4a71e159e09a3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修成后的文件夹名字"></p><h4 id="3-2-选中-NewDemo-xcodeproj-右键打开-–-gt-显示包内容-–-gt-双击打开-project-pbxproj-。"><a href="#3-2-选中-NewDemo-xcodeproj-右键打开-–-gt-显示包内容-–-gt-双击打开-project-pbxproj-。" class="headerlink" title="3.2 选中 NewDemo.xcodeproj 右键打开 –&gt; 显示包内容 –&gt; 双击打开 project.pbxproj 。"></a>3.2 选中 <code>NewDemo.xcodeproj</code> 右键打开 –&gt; 显示包内容 –&gt; 双击打开 <code>project.pbxproj</code> 。</h4><p><img src="http://upload-images.jianshu.io/upload_images/329784-c4227fc432a4ed20.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="显示包内容，双击打开 project.pbxproj"></p><h4 id="3-3-打开-project-pbxproj-文件之后，用搜索快捷键-command-f-全局搜索旧的项目名-OldDemo123-，并用新的项目名-NewDemo-进行替换。替换完成后进行保存-command-s，然后关闭。"><a href="#3-3-打开-project-pbxproj-文件之后，用搜索快捷键-command-f-全局搜索旧的项目名-OldDemo123-，并用新的项目名-NewDemo-进行替换。替换完成后进行保存-command-s，然后关闭。" class="headerlink" title="3.3 打开 project.pbxproj 文件之后，用搜索快捷键 command + f 全局搜索旧的项目名 OldDemo123 ，并用新的项目名 NewDemo 进行替换。替换完成后进行保存 command + s，然后关闭。"></a>3.3 打开 <code>project.pbxproj</code> 文件之后，用搜索快捷键 <code>command + f</code> 全局搜索旧的项目名 <code>OldDemo123</code> ，并用新的项目名 <code>NewDemo</code> 进行替换。替换完成后进行保存 <code>command + s</code>，然后关闭。</h4><p>注意：要把所有的 <code>OldDemo123</code> 更换成 <code>NewDemo</code>。</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-17b868c4b814bb4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="搜索 OldDemo123 ，并替换成 NewDemo"></p><h3 id="4-打开-NewDemo-xcodeproj-文件"><a href="#4-打开-NewDemo-xcodeproj-文件" class="headerlink" title="4. 打开 NewDemo.xcodeproj 文件"></a>4. 打开 <code>NewDemo.xcodeproj</code> 文件</h3><p>注意：打开的是 <code>NewDemo.xcodeproj</code> 文件，而不是 <code>NewDemo.xcworkspace</code>文件。</p><h4 id="4-1-此时会弹出提示框，点击-OK-就行。"><a href="#4-1-此时会弹出提示框，点击-OK-就行。" class="headerlink" title="4.1 此时会弹出提示框，点击 OK 就行。"></a>4.1 此时会弹出提示框，点击 <code>OK</code> 就行。</h4><p><img src="http://upload-images.jianshu.io/upload_images/329784-9b7901662ad6609b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="弹出提示框"></p><h4 id="4-2-显示此时项目结构和修改更新Podfile文件"><a href="#4-2-显示此时项目结构和修改更新Podfile文件" class="headerlink" title="4.2 显示此时项目结构和修改更新Podfile文件"></a>4.2 显示此时项目结构和修改更新<code>Podfile</code>文件</h4><p><img src="http://upload-images.jianshu.io/upload_images/329784-65a4d17f717f2a52.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改好项目结构"></p><p>如果你的项目里面没有使用CocoaPods的话，项目应该可以运行成功了。</p><p>使用CocoaPods的话，项目虽然表面看起来已经修改成功了，但是运行之后发现提示错误：</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-1ad843df8f7d8e34.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="使用CocoaPods的话，会提示的错误"></p><p>此时打开项目文件夹，找到 <code>Podfile</code> 文件，双击打开，修改 <code>target</code> 后的项目名为最新的项目名 <code>NewDemo </code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">target &#39;NewDemo&#39; do</span><br><span class="line">pod &#39;AFNetworking&#39;, &#39;~&gt; 3.0&#39;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>然后在终端，用 <code>cd</code> 到项目目录下，运行 <code>$ pod install</code>，进行更新。</p><h4 id="4-3-打开-NewDemo-xcworkspace-文件"><a href="#4-3-打开-NewDemo-xcworkspace-文件" class="headerlink" title="4.3 打开 NewDemo.xcworkspace 文件"></a>4.3 打开 <code>NewDemo.xcworkspace</code> 文件</h4><p>此时文件显示错误：因为文件路径的原因</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-431876ffa52d9a54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="错误显示"></p><p>选中显示红色的 <code>OldDemo123</code> 文件，点击右侧文件夹小图标，更改路径。</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-d4d1415c11a34bf5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改文件路径"></p><p>路径更改成功之后，项目基本就可以运行成功了。</p><h3 id="5-修改-Scheme-名"><a href="#5-修改-Scheme-名" class="headerlink" title="5. 修改 Scheme 名"></a>5. 修改 <code>Scheme</code> 名</h3><p>选中 <code>OldDemo123</code> –&gt; 下拉中选中 <code>Manage Schemes</code> –&gt; 弹出一个显示框。</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-089c8f378d70371d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改Scheme名"></p><p>选中要修改的 <code>OldDemo123</code> 那一行，并按下回车，进行修改新的名称 <code>NewDemo</code>，然后点击 <code>Close</code>。</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-0ec6c2834a67baa5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改新的 Scheme 名"></p><h3 id="6-项目内全局修改、替换"><a href="#6-项目内全局修改、替换" class="headerlink" title="6. 项目内全局修改、替换"></a>6. 项目内全局修改、替换</h3><p>其实到上面，项目已经基本修改完成了，但是对于一些处女座、强迫症患者来说，还有一些问题，如下：</p><p><img src="http://upload-images.jianshu.io/upload_images/329784-3e495148014f7c0b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="生成类时的顶部介绍"></p><h4 id="6-1-全局搜索旧的项目名"><a href="#6-1-全局搜索旧的项目名" class="headerlink" title="6.1 全局搜索旧的项目名"></a>6.1 全局搜索旧的项目名</h4><p><img src="http://upload-images.jianshu.io/upload_images/329784-e985cd32211e3036.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="全局搜索"></p><h4 id="6-2-把-Find-修改为-Replace，输入新的项目名，点击-Replace-All-全局替换。"><a href="#6-2-把-Find-修改为-Replace，输入新的项目名，点击-Replace-All-全局替换。" class="headerlink" title="6.2 把 Find 修改为 Replace，输入新的项目名，点击 Replace All 全局替换。"></a>6.2 把 <code>Find</code> 修改为 <code>Replace</code>，输入新的项目名，点击 <code>Replace All</code> 全局替换。</h4><p><img src="http://upload-images.jianshu.io/upload_images/329784-df17899bc5e1b894.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/400" alt="全局替换"></p><h3 id="7-最后"><a href="#7-最后" class="headerlink" title="7. 最后"></a>7. 最后</h3><p>到此，项目名已经完全修改完成了，小伙伴们可以尝试修改了。</p><p>下面是修改后的项目结构：<br><img src="http://upload-images.jianshu.io/upload_images/329784-a145959de5ce3f72.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改后的项目结构"></p><p><strong>注意：重命名项目时，记得先备份好一份</strong></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;在iOS开发中，有时候想改一下项目的名字，这会遇到很多麻烦。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接改项目名的话，Xcode不会帮你改所有的名字&lt;/li&gt;
&lt;li&gt;项目中的很多文件、文件夹或者是项目设置的项，都是不能随便改的，有时候改着改着，就会编译不了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以各位重命名项目时，记得先备份好一份噢。本文我会介绍一种“完美”的修改方法。&lt;/p&gt;</summary>
    
    
    
    <category term="iOS" scheme="http://yoursite.com/categories/iOS/"/>
    
    
    <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
    <category term="Xcode" scheme="http://yoursite.com/tags/Xcode/"/>
    
  </entry>
  
</feed>
